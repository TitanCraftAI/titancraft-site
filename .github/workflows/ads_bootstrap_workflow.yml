name: Marketing â€” Structured Meta (JSON-LD + OG/Twitter)

on:
  # manual only (avoids re-run loops on the commit this workflow makes)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate JSON-LD + OG/Twitter
        run: |
          python - <<'PY'
          import json, pathlib
          site = "https://titancraft.io"

          p = pathlib.Path("public")
          p.mkdir(exist_ok=True)

          # JSON-LD (Organization)
          org = {
              "@context": "https://schema.org",
              "@type": "Organization",
              "name": "TitanCraft AI",
              "url": site,
              "logo": f"{site}/public/logo.png",
              "sameAs": [
                  "https://x.com/titancraftai",
                  "https://www.linkedin.com/company/titancraft-ai",
              ],
          }
          (p / "site.schema.json").write_text(json.dumps(org, indent=2))

          # Open Graph + Twitter meta fragment
          og = f"""<meta property="og:title" content="TitanCraft AI">
          <meta property="og:description" content="Beat ChatGPT by routing your questions to specialist models.">
          <meta property="og:type" content="website">
          <meta property="og:url" content="{site}">
          <meta property="og:image" content="{site}/public/og.png">
          <meta name="twitter:card" content="summary_large_image">
          <meta name="twitter:site" content="@titancraftai">"""
          (p / "structured_meta.html").write_text(og)
          PY

      - name: Commit & push meta (safe)
        run: |
          set -euxo pipefail
          git config user.name  "titan-bot"
          git config user.email "titan-bot@users.noreply.github.com"

          git add public/site.schema.json public/structured_meta.html || true
          if git diff --cached --quiet; then
            echo "No meta changes; skipping push."
            exit 0
          fi

          branch="${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}"
          git pull --rebase origin "$branch" || true
          git commit -m "chore(meta): update JSON-LD + OG/Twitter [skip ci]"
          git push origin "HEAD:$branch"
