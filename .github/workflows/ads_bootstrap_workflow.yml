name: Marketing â€” Structured Meta (JSON-LD + OG/Twitter)

on:
  workflow_dispatch:
  schedule:
    - cron: '17 9 * * 1,3,5'   # Mon/Wed/Fri 09:17 UTC

permissions:
  contents: write

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Generate JSON-LD + OG/Twitter
        shell: bash
        run: |
          set -euxo pipefail
          python - <<'PY'
          import json, pathlib

          SITE = "https://titancraft.io"
          PUB = pathlib.Path("public")
          PUB.mkdir(exist_ok=True)

          org = {
              "@context": "https://schema.org",
              "@type": "Organization",
              "name": "TitanCraft AI",
              "url": SITE,
              "logo": f"{SITE}/public/logo.png",
              "sameAs": [
                  "https://x.com/titancraftai",
                  "https://www.linkedin.com/company/titancraft-ai",
              ],
          }
          (PUB / "site.schema.json").write_text(json.dumps(org, indent=2))

          meta = f"""<meta property="og:title" content="TitanCraft AI">
          <meta property="og:description" content="Beat ChatGPT by routing your questions to specialist models.">
          <meta property="og:type" content="website">
          <meta property="og:url" content="{SITE}">
          <meta property="og:image" content="{SITE}/public/og.png">
          <meta name="twitter:card" content="summary_large_image">
          <meta name="twitter:site" content="@titancraftai">"""
          (PUB / "structured_meta.html").write_text(meta)
          PY

      - name: Commit & push
        run: |
          set -euxo pipefail
          git config user.name  "titan-bot"
          git config user.email "titan-bot@users.noreply.github.com"
          git add public/site.schema.json public/structured_meta.html || true
          if git diff --cached --quiet; then
            echo "No meta changes; skipping push."
            exit 0
          fi
          branch="${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}"
          git pull --rebase origin "$branch" || true
          git commit -m "chore(meta): update JSON-LD + OG/Twitter [skip ci]"
          git push origin "HEAD:$branch"
